import getConnection from "config/database";

const handleCreateUser = async (
    fullName: string,
    email: string,
    address: string) => {

    //insert into database
    const connection = await getConnection();
    try {
        const sql = 'INSERT INTO `user`(`name`, `email`,`address`) VALUES (?, ?, ?)';
        const values = [fullName, email, address];

        const [result, fields] = await connection.execute(sql, values);

        return result;
    } catch (err) {
        console.log(err);
        return [];
    }

}
const getAllUsers = async () => {
    const connection = await getConnection();
    try {
        const [results, fields] = await connection.query(
            'SELECT * FROM `user`'
        );
        return results;
    } catch (err) {
        console.log(err);
        return [];
    }
};

const handleDeleteUser = async (id: string) => {

    try {
        const connection = await getConnection();
        const sql = 'DELETE FROM `user` WHERE id = ?';
        const values = [id];
        const [result, fields] = await connection.execute(sql, values);
        return result;
    } catch (err) {
        console.log(err);
        return [];
    }
}
const getUserById = async (id: string) => {
    const connection = await getConnection();
    try {
        const sql = 'SELECT * FROM `user` WHERE id = ?';
        const values = [id];
        const [result, fields] = await connection.execute(sql, values);
        return result[0];
    } catch (err) {
        console.log(err);
        return [];
    }
}
const updateUserById = async (id: string, email: string, address: string, fullName: string) => {
    try {
        const connection = await getConnection();
        const sql = 'UPDATE `user` SET `name`=?,`email`=?,`address`=? WHERE id = ?';
        const values = [fullName, email, address, id];
        const [result, fields] = await connection.execute(sql, values);
        return result;
    } catch (err) {
        console.log(err);
        return [];
    }
}
export { handleCreateUser, getAllUsers, handleDeleteUser, getUserById, updateUserById };